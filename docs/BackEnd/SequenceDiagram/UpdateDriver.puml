http://www.plantuml.com/plantuml/uml/bPD1J_9048Rl-olc28c4UnC9mLR56CNoeKUpqZ7PMBhhx9Q46F-xKxQmnMqCtuMKwRplCpETcLedoTMRKiYrqmJNf2kNLOKm75PhPMJbO5cgpKaW9RL5ibUSIxeiaVhUvcYqLMow4uLqyarQX7Gcn041eydU6H9OhFx1M1erBhnq_9Ncy-SiVvsdtqrXQYiT-ZAQ7rR69R2DLyCbr8Q9w5C6HwkBDc4XIMxiC1Z7xKGHHiPzTP6VDT9kzP_SQ50YPZJW6PEMJ_SUqdO7BxTPde4g67v4TRndWcMZlh8Jq1-Ym9FK6Bld9b1Aw-RCy0-LHUA_W-5P83Z8Vz44uJjepeqbuWQT3xRD4jgwT8S1jwFrhaE1LG7iTPvX-5PhmZ3-OD8pX3yNhTjLp0qrnUirclWOE7stV7mOX4xwDY_SIND7NMhil4zi5CShIveH6brPzChEBKsPogV_0m00

@startuml
actor FrontEnd
participant Slim
participant DriversController
participant DriversRepository
database DB

FrontEnd -> Slim : PUT /api/drivers/{DRIVER_ID}
activate Slim
Slim -> DriversController : driver = updateDriver(DRIVER_ID, driverParams)
activate DriversController
DriversController -> DriversRepository : driver = queryUpdateDriver(DRIVER_ID, driverParams)
activate DriversRepository

DriversRepository -> DB : SQL query update WHERE id = DRIVER_ID
activate DB
DB --> DriversRepository: ok
deactivate DB
DriversRepository --> DB: lastId = lastInsertId()
activate DB
DB --> DriversRepository : lastId
deactivate DB

ref over DriversRepository
GetDriver query result = queryDriver(lastId)
end ref

ref over DriversRepository
GetDriver driver = create Driver
end ref

DriversRepository --> DriversController : driver
deactivate DriversRepository

ref over DriversController
->Driver toJSON()
end ref

DriversController --> Slim : data
deactivate DriversController
Slim --> FrontEnd : response
deactivate Slim
@enduml