http://www.plantuml.com/plantuml/uml/RL7DIiD04BxFKmmzjOVIUmvI-wCWHT5w3sCor8LjDivEXBwzEss2Bkij-VwNMKSbqU7iWHeDWWyIEjrtBVG9TethgLCyUdVEW2r9t2QX1EzP2kgD-n2T1hbarAokgqJNzGmfcX1QKlgWoBZR04pLkBoxDcA5Z_jtN57lLWr910EDpDihFB4QD5z0pfWsdvCYlmQMoxttaoFZpR7R9DNnzN1JGlfT5ZbZ30h7mMi4y27q6OQUkvD-GYDCocOlgmnDNJV9F4jS07Sj59RYyMPFmC55HHAXopWb1wSnkVTtWOQduylpV07KgFl-i_V_HXD3ovduEhSe62yvUQxV1awdhkozVUWYmpeb36V_0m00

@startuml
actor FrontEnd
participant Slim
participant CarsController
participant CarsRepository
participant "__:Car__" as Car
database DB

FrontEnd -> Slim : GET /api/cars
Slim -> CarsController: getCars()
CarsController -> CarsRepository : queryAllCars()
CarsRepository -> DB : SQL query
DB --> CarsRepository: query results

loop query result length
create Car
CarsRepository -> Car : create(query results)
end

CarsRepository --> CarsController : carsList array

loop carsList array length
CarsController -> Car : toJSON()
activate Car
Car --> CarsController : JSON
deactivate Car
end


CarsController --> Slim : JSON
Slim --> FrontEnd: response
@enduml