http://www.plantuml.com/plantuml/uml/ZLDBJy904BxlhvXmAWV2dGI3uYCQ8sYzDoCTausbMsSN4lwzNotITWk95zBPcUyn3nO-i8RTjZ2y2KxfNbqPxihSL7Ys6rjn6IWjxBRti6JrInIgAmhHGUfDAkSjw0wzr2ZBPaXdsOZOruKcvy0Vx8LkRupvawR9rQyYpMYzIjzfofMTRa1RMxHx3j8OgdzG6va12hKq9yvpP184QrRU-d4BZ-ptGr16JPmeltUYX-lBl57l_H2yQ1DSwUjpmtIqsE8n1LHCpXbmNoQNJk4bye9zUCnftdoKNXHXClwNHeEDT8pA9xczQDpTWmIyT2U3C6aunaQmHo3DmEU5XNLL-v3pwm5AnLSE7K8-kATqzPBqLr43XtfTP2GwK6eFyGmYeZsU8o2dEnx0sjjTO3xuq_q0

@startuml
actor FrontEnd
participant Slim
participant CarsController
participant CarsRepository
participant "__:Car__" as Car
database DB

FrontEnd -> Slim : POST /api/cars
activate Slim
Slim -> CarsController : car = addCar(carParams)
activate CarsController
CarsController -> CarsRepository : car = queryAddCar(carParams)
activate CarsRepository
CarsRepository -> DB : SQL query addCar
activate DB
DB --> CarsRepository : ok
deactivate DB
CarsRepository -> DB : lastId = lastInsertId()
activate DB
DB --> CarsRepository : lastId
deactivate DB

ref over CarsRepository
GetCar car = queryCar(lastId)
end ref

CarsRepository --> CarsController : car
deactivate CarsRepository
CarsController -> Car : response = toJSON()
activate Car
Car --> CarsController : response
deactivate Car
CarsController --> Slim : response
deactivate CarsController
Slim --> FrontEnd : response
deactivate Slim
@enduml