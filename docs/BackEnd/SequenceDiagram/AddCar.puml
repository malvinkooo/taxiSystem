http://www.plantuml.com/plantuml/uml/bLDDR_8m3BxdLrYSu82u8p6nCQPjcWQZhxHZvJKvH4kJBaadyU_dhYLg3HrwBmZ7puSVgrw7Y3xMfH5OHEVXmJiRjrQAYfvreIkq4JAZoy731dtO4D0xOvG_QnrKvO8ckUEWDSdp9RNpV08O6g2G6F43WuBxEo5ErZ2_-NM49UntsJzOOAKN1Sas8-flZAeTgFaXB1k6M8I55Q2Kr9bIiKUFPPWbEXz_M98a2v4alshbZxUZkZpxi2HTYabQsTjBgzIDcFZK5eIONnh0VGgfUi0nSOCXFabOjNziK9xAwUowH-9UzU6yBenNeJRnjALcHQtUV-w7o_NMzVwuFMn1ftJoUYecnx99DJPQuLNtUda1wPDeWTE-oOnHnhxHF-mPF7cIGULiK6GStNEsUntibcY4vMvz7hCyyqcNTud1PBlx8qewN4xh7UjQMLcNvWS0

@startuml
actor FrontEnd
participant Slim
participant CarsController
participant CarsRepository
participant "__:Car__" as Car
database DB

FrontEnd -> Slim : POST /api/cars
activate Slim
Slim -> CarsController : car = addCar(carParams)
activate CarsController
CarsController -> CarsRepository : car = queryAddCar(carParams)
activate CarsRepository
CarsRepository -> DB : SQL query addCar
activate DB
DB --> CarsRepository : ok
deactivate DB
CarsRepository -> DB : lastId = lastInsertId()
activate DB
DB --> CarsRepository : lastId
deactivate DB
CarsRepository -> CarsRepository : query result = queryCar(lastId)
activate CarsRepository
CarsRepository -> DB : query result = SQL query WHERE id = lastId
activate DB
DB --> CarsRepository : query result
deactivate DB
deactivate CarsRepository
create Car
CarsRepository -> Car : car = create(query result)
CarsRepository -> CarsController : car
deactivate CarsRepository
CarsController -> Car : response = toJSON
activate Car
Car --> CarsController : response
deactivate Car
CarsController --> Slim : response
deactivate CarsController
Slim --> FrontEnd : response
deactivate Slim
@enduml