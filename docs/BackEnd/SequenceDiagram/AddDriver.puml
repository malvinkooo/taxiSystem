http://www.plantuml.com/plantuml/uml/ZLDDJyCm3BtdLrWxjOTfzqb3OmmG2B51kLTcCL94svGacxH_Zwa7NPOLkBKlx-CvaUS-e0lRkbAu2TR1ZRDDk6wqQXas6zDY4w2eJ1q1IsTsvFmLSvsjAdBdJf-fjTwmwJuw7PNbL1XbEGBq1xhI6F0LFS5oeTHt3HXVTEamXVMgU849jcQYnV-hiTbX8EdNqPYUT6EjA606gBMSPmAjqM7jyzugdIn1E2GTyJZaOqjkV_bdKd9B2T8bBTYwU7eGrtw08wE5Oj9ue9LzLveYxc1AXJxSQPZ9H-F9yM-M_pT9v2Tfoj4RMEQc4dLBuO2UNfwWcJZcYXeDxAFETV_rnQCoIVxmque51kH2mTuNgySiFvqagXzpayR3DLcNbZnNh5y4HxwrZQTKToIGTM3LpqQdodvtvjntMrUV

@startuml
actor FrontEnd
participant Slim
participant DriversController
participant DriversRepository
participant "__:Driver__" as Driver
database DB

FrontEnd -> Slim : POST /api/drivers
activate Slim
Slim -> DriversController : driver = addDriver(driverParams)
activate DriversController
DriversController -> DriversRepository : driver = queryAddDriver(driverParams)
activate DriversRepository
DriversRepository -> DB : SQL query addDriver
activate DB
DB --> DriversRepository : ok
deactivate DB
DriversRepository -> DB : lastId = lastInsertId()
activate DB
DB --> DriversRepository : lastId
deactivate DB

ref over DriversRepository
Get Driver: driver = queryDriver(lastId)
end ref

DriversRepository --> DriversController : driver
deactivate DriversRepository

DriversController -> Driver : data = toJSON()
ref over Driver
Get Driver: data = toJSON()
end ref

Driver --> DriversController : data
deactivate Driver
DriversController --> Slim : response
deactivate DriversController
Slim --> FrontEnd : response
deactivate Slim
@enduml