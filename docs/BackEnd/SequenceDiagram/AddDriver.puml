http://www.plantuml.com/plantuml/uml/ZLJFJy8m5BxthsWuRGV2dGI3W1gD4NJUbyVwJARREjkEXF_UDqkpufleXMpjz-FxtbgMre5nNLq9A9msyjRenjqqIhIqN1Pb2usJMLNMPmiRKnxGs3LXZQugD6ExBzXgMvBeyMntakTpZyZpYGHxWZFC6WA0deG21tkmA3Sh8K98ERtwpYRdShVDNkKCsdAcl7lVfpo0Gv--_o4uJqvSpv0B2Khv_SGlxS10RTD1YlTcAsJ21n2RV7PeZjT_EV4PSj7UQKNIsVEZLnqAH48hGQ3fBwdqXr0OOI-uL63TlP8B_z1ODFIQfFzrylGVRiBWczI4vHHnX-4apK_j3DgkSc64f_bvtLHWeoIf2L4O70OutiSlnX_5avBO9mrAQmWonAKt8exYnxmkdhXu6Bm_vyN9zVuT2xS11vJUwOTi-vImuyDYNsJvfZrmEkuKvus7majo8a_6sWsNsQ1jTMEHyoA2lz8zA_mTSEPm_vVOgAwklW00

@startuml
actor FrontEnd
participant Slim
participant DriversController
participant DriversRepository
participant "__:Driver__" as Driver
participant "__:Car__" as Car
database DB

FrontEnd -> Slim : POST /api/drivers
activate Slim
Slim -> DriversController : driver = addDriver(driverParams)
activate DriversController
DriversController -> DriversRepository : driver = queryAddDriver(driverParams)
activate DriversRepository
DriversRepository -> DB : SQL query addDriver
activate DB
DB --> DriversRepository : ok
deactivate DB
DriversRepository -> DB : lastId = lastInsertId()
activate DB
DB --> DriversRepository : lastId
deactivate DB

ref over DriversRepository
Get Driver: query result = queryDriver(lastId)
end ref

create Driver
DriversRepository -> Driver : driver = create(query result)
create Car
Driver -> Car : create(query result)
DriversRepository --> DriversController : driver
deactivate DriversRepository
DriversController -> Driver : objectData = toJSON()
activate Driver
Driver -> Car : objectData = toJSON()
activate Car
Car --> Driver : objectData
deactivate Car
Driver --> DriversController : objectData
deactivate Driver
DriversController --> Slim : response
deactivate DriversController
Slim --> FrontEnd : response
deactivate Slim
@enduml