http://www.plantuml.com/plantuml/uml/TPDHQy8m58NVyoikFkc3z5tO46stESR6MjWUIsOk8r2RBec2ZFtttPgcZII-I6tE-Swvj-tQMAxjyT0mlhTAmuDMhIrQmJgwBVUouws5gf67gnkvbYVKPajQhPe6TUgqn4uPIT3prUcihbTEKTSpu6QGHvejzmAwOe9R_iKDGhvXp9U4vVsb6wpW4Iral9EPSE7PRrxkFegotkL__MZon2swGVeVSiP34CQvuGw-qRhp-SXPJ9nu_XX62T4YmeIV8-hpxOp45cDSdx4XQFN-udZm-LIK1KX10ICqO6uOwPStgZc2HdDiB1COklOQfqw98YEHC8Ds7k8Mdh3btauU-ZSPKjJKK_8h31j6rkJpc2fIgKwr1cbBLZrNRw_pQF438TqXpau5-hTpoWjzCVGY9jVu4QQTxYrUOolei_q7

@startuml
actor FrontEnd
participant Slim
participant DriversController
participant DriversRepository
participant "__:Driver__" as Driver
participant "__:Car__" as Car
database DB

FrontEnd -> Slim : Get /api/drivers/{DRIVER_ID}
activate Slim
Slim -> DriversController : driver = getDriver(DRIVER_ID)
activate DriversController
DriversController -> DriversRepository : driver = queryDriver(DRIVER_ID)
activate DriversRepository
DriversRepository -> DB : SQL query WHERE id = DRIVER_ID
activate DB
DB --> DriversRepository : query result
deactivate DB
create Driver
DriversRepository -> Driver : create (query result)
create Car
Driver -> Car : create
DriversRepository --> DriversController: driver
deactivate DriversRepository
DriversController -> Driver : response = toJSON()
activate Driver
Driver --> DriversController
deactivate Driver
DriversController --> Slim : response
deactivate DriversController
Slim --> FrontEnd : response
deactivate Slim
@enduml